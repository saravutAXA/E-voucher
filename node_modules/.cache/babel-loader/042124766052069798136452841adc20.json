{"ast":null,"code":"import _classCallCheck from \"D:\\\\React_AXA\\\\test-theme\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\React_AXA\\\\test-theme\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\React_AXA\\\\test-theme\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\React_AXA\\\\test-theme\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\React_AXA\\\\test-theme\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\React_AXA\\\\test-theme\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\React_AXA\\\\test-theme\\\\src\\\\components\\\\NotificationDropdown.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nvar notificationContainerStyle = {\n  'maxHeight': '230px'\n};\n\nvar NotificationDropdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NotificationDropdown, _Component);\n\n  function NotificationDropdown(props) {\n    var _this;\n\n    _classCallCheck(this, NotificationDropdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NotificationDropdown).call(this, props));\n\n    _this.getRedirectUrl = function (item) {\n      return \"/notification/\".concat(item.id);\n    };\n\n    _this.toggleDropdown = _this.toggleDropdown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      dropdownOpen: false\n    };\n    return _this;\n  }\n  /*:: toggleDropdown: () => void */\n\n\n  _createClass(NotificationDropdown, [{\n    key: \"toggleDropdown\",\n    value: function toggleDropdown() {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Dropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: this.toggleDropdown,\n        className: \"notification-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        \"data-toggle\": \"dropdown\",\n        tag: \"button\",\n        className: \"nav-link dropdown-toggle  waves-effect waves-light btn btn-link\",\n        onClick: this.toggleDropdown,\n        \"aria-expanded\": this.state.dropdownOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fe-bell noti-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"badge badge-danger rounded-circle noti-icon-badge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"9\")), React.createElement(DropdownMenu, {\n        right: true,\n        className: \"dropdown-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.toggleDropdown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dropdown-item noti-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/notifications\",\n        className: \"text-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Clear All\"))), \"Notification\")), React.createElement(PerfectScrollbar, {\n        style: notificationContainerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.props.notifications.map(function (item, i) {\n        return React.createElement(Link, {\n          to: _this2.getRedirectUrl(item),\n          className: \"dropdown-item notify-item\",\n          key: i + \"-noti\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"notify-icon bg-\".concat(item.bgColor),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: item.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          className: \"notify-details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, item.text, React.createElement(\"small\", {\n          className: \"text-muted\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, item.subText)));\n      })), React.createElement(Link, {\n        to: \"/\",\n        className: \"dropdown-item text-center text-primary notify-item notify-all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"View All\"))));\n    }\n  }]);\n\n  return NotificationDropdown;\n}(Component);\n\nNotificationDropdown.defaultProps = {\n  notifications: []\n};\nexport default NotificationDropdown;","map":{"version":3,"sources":["D:\\React_AXA\\test-theme\\src\\components\\NotificationDropdown.js"],"names":["React","Component","Link","Dropdown","DropdownMenu","DropdownToggle","PerfectScrollbar","notificationContainerStyle","NotificationDropdown","props","getRedirectUrl","item","id","toggleDropdown","bind","state","dropdownOpen","setState","notifications","map","i","bgColor","icon","text","subText","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\n\nconst notificationContainerStyle = {\n    'maxHeight': '230px'\n};\n\n\nclass NotificationDropdown extends Component {\n\n    static defaultProps = {\n        notifications: []\n    }\n\n    constructor(props) {\n        super(props);\n        this.toggleDropdown = this.toggleDropdown.bind(this);\n\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n\n    /*:: toggleDropdown: () => void */\n    toggleDropdown() {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    getRedirectUrl = (item) => {\n        return `/notification/${item.id}`;\n    }\n\n    render() {\n\n        return (\n            <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropdown} className=\"notification-list\">\n                <DropdownToggle\n                    data-toggle=\"dropdown\"\n                    tag=\"button\"\n                    className=\"nav-link dropdown-toggle  waves-effect waves-light btn btn-link\" onClick={this.toggleDropdown} aria-expanded={this.state.dropdownOpen}>\n                    <i className=\"fe-bell noti-icon\"></i>\n                    <span className=\"badge badge-danger rounded-circle noti-icon-badge\">9</span>\n                </DropdownToggle>\n                <DropdownMenu right className=\"dropdown-lg\">\n                    <div onClick={this.toggleDropdown}>\n                        <div className=\"dropdown-item noti-title\">\n                            <h5 className=\"m-0\">\n                                <span className=\"float-right\">\n                                    <Link to=\"/notifications\" className=\"text-dark\">\n                                        <small>Clear All</small>\n                                    </Link>\n                                </span>Notification\n                                </h5>\n                        </div>\n                        <PerfectScrollbar style={notificationContainerStyle}>\n                            {this.props.notifications.map((item, i) => {\n                                return <Link to={this.getRedirectUrl(item)} className=\"dropdown-item notify-item\" key={i + \"-noti\"}>\n                                    <div className={`notify-icon bg-${item.bgColor}`}>\n                                        <i className={item.icon}></i>\n                                    </div>\n                                    <p className=\"notify-details\">{item.text}\n                                        <small className=\"text-muted\">{item.subText}</small>\n                                    </p>\n                                </Link>\n                            })}\n                        </PerfectScrollbar>\n\n                        <Link to=\"/\" className=\"dropdown-item text-center text-primary notify-item notify-all\">View All</Link>\n                    </div>\n                </DropdownMenu>\n            </Dropdown>\n        );\n    }\n}\n\nexport default NotificationDropdown;"]},"metadata":{},"sourceType":"module"}